{"version":3,"sources":["contact/contact.tsx","message/message.tsx","dhamma/dhamma-item.tsx","dhamma-list/dhamma-list.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","mainContent","minHeight","display","justifyContent","flexWrap","alignItems","flexDirection","breakpoints","up","card","width","cardHeader","padding","cardMap","cardContent","cardLine","cardLineLeft","marginRight","cardSpacing","Home","classes","className","Card","CardContent","Typography","variant","dangerouslySetInnerHTML","__html","MailOutline","Phone","AlternateEmail","content","Message","type","ErrorOutline","CircularProgress","dhamma","marginBottom","audios","audio","DhammaItem","id","title","useState","state","setState","useEffect","subscription","from","axios","get","pipe","map","response","data","subscribe","dhammas","length","error","unsubscribe","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore","ExpansionPanelDetails","index","key","controls","src","location","dhammaList","header","moreContainer","DhammaList","loading","setLoading","lastIndex","setLastIndex","end","setEnd","setDhammas","observable","slice","IconButton","edge","color","aria-label","onClick","setTimeout","MoreVert","createMuiTheme","palette","primary","main","text","secondary","list","fullList","menuButton","spacing","menus","menuLinks","textDecoration","flexGrow","footerText","footerTextHeart","marginLeft","margin","logo","drawerHeaderContainer","backgroundColor","minWidth","drawerHeaderLogo","height","App","React","open","openDrawer","event","closeDrawer","ThemeProvider","AppBar","position","Toolbar","Menu","Avatar","alt","Hidden","smDown","underline","component","Link","to","Button","startIcon","Headset","path","Contact","exact","SwipeableDrawer","anchor","onClose","onOpen","onKeyDown","List","ListItem","button","ListItemIcon","Divider","ListItemText","target","rel","href","Facebook","fontSize","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5bd17320.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Phone, AlternateEmail, MailOutline } from '@material-ui/icons';\r\nimport { CardContent } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n  createStyles({\r\n    mainContent: {\r\n        minHeight: 'calc(100vh - 14rem)',\r\n        display: 'flex',\r\n        justifyContent: 'space-evenly',\r\n        flexWrap: 'wrap',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        [theme.breakpoints.up('md')]: {\r\n            flexDirection: 'row',\r\n            alignItems: 'stretch'\r\n        }\r\n    },\r\n    card: {\r\n        width: '24rem',\r\n    },\r\n    cardHeader: {\r\n        padding: '1rem'\r\n    },\r\n    cardMap: {\r\n        width: '100%'\r\n    },\r\n    cardContent: {\r\n        padding: '0rem'\r\n    },\r\n    cardLine: {\r\n        display: 'flex',\r\n        padding: '1rem 1rem 0rem 1rem',\r\n    },\r\n    cardLineLeft: {\r\n        marginRight: '1rem'\r\n    },\r\n    cardSpacing: {\r\n        padding: '1rem',\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: '0rem',\r\n        }\r\n    }\r\n  })\r\n);\r\n\r\nconst yangonMap = '<iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3816.009533184145!2d96.16050741487055!3d16.9740813883275!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x30c190cf78f72fc1%3A0x2ce4d09127bd7145!2sMyauk+Oo+Sayataw+Monastery!5e0!3m2!1sen!2suk!4v1531355267554\" width=\"100%\" height=\"300\" frameborder=\"0\" style=\"border:0\" allowfullscreen></iframe>';\r\nconst usaMap = '<iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3197.7742190197596!2d-119.79685828471226!3d36.7279833799634!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x8094609c77e439cf%3A0x6d23a344a734e4c1!2s1340+Kern+St%2C+Fresno%2C+CA+93706!5e0!3m2!1sen!2sus!4v1531333238021\" width=\"100%\" height=\"300\" frameborder=\"0\" style=\"border:0\" allowfullscreen></iframe>'\r\n\r\nconst Home: React.FC = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.mainContent}>\r\n            <Card className={classes.card}>\r\n                <CardContent className={classes.cardContent}>\r\n                    <Typography variant=\"h5\" className={classes.cardHeader}>ရန်ကုန်</Typography>\r\n                    <div dangerouslySetInnerHTML={{ __html: yangonMap }} className={classes.cardMap}></div>\r\n                    <div className={classes.cardLine}>\r\n                        <MailOutline className={classes.cardLineLeft} />\r\n                        <Typography variant=\"body2\">ရတနာမာရ်အောင် တောရဓမ္မရိပ်သာ<br />နွယ်သာကီလမ်း၊ ဉာဏရပ်ကွက်<br />ပုလဲမြို့သစ်၊ ရန်ကုန်မြို့</Typography>\r\n                    </div>\r\n                    <div className={classes.cardLine}>\r\n                        <Phone className={classes.cardLineLeft} />\r\n                        <Typography variant=\"body2\">(၉၅) ၉-၅၁၂၉၆၈၇<br />(၉၅) ၉-၂၀ ၄၃၇၉၄</Typography>\r\n                    </div>\r\n                    <div className={classes.cardLine}>\r\n                        <AlternateEmail className={classes.cardLineLeft} />\r\n                        <Typography variant=\"body2\">yangon@mraukoomediationcenter.org</Typography>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <div className={classes.cardSpacing}></div>\r\n            <Card className={classes.card}>\r\n                <CardContent className={classes.cardContent}>\r\n                    <Typography variant=\"h5\" className={classes.cardHeader}>United States</Typography>\r\n                    <div dangerouslySetInnerHTML={{ __html: usaMap }} className={classes.cardMap}></div>\r\n                    <div className={classes.cardLine}>\r\n                        <MailOutline className={classes.cardLineLeft} />\r\n                        <Typography variant=\"body2\">1340 Kern Street,<br />Fresno, CA 93706</Typography>\r\n                    </div>\r\n                    <div className={classes.cardLine}>\r\n                        <AlternateEmail className={classes.cardLineLeft} />\r\n                        <Typography variant=\"body2\">usa@mraukoomediationcenter.org</Typography>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { ErrorOutline } from '@material-ui/icons';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nexport declare type MessageType = \"Error\" | \"Loading\";\r\n\r\ntype MessageProps = {\r\n    type: MessageType\r\n}\r\n\r\nconst useStyles = makeStyles(() => \r\n  createStyles({\r\n    content: {\r\n        display: 'flex',\r\n        minHeight: '5rem',\r\n        width: '100%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n  })\r\n);\r\n\r\nexport const Message: React.FC<MessageProps> = ({ type }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.content}>\r\n        {\r\n            type === \"Error\" ? <ErrorOutline /> : <CircularProgress />\r\n        }\r\n        </div>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Dhamma } from './model'\r\nimport { ExpansionPanelSummary, ExpansionPanel, ExpansionPanelDetails, Typography, Theme, createStyles } from '@material-ui/core';\r\nimport { ExpandMore } from '@material-ui/icons';\r\nimport { Message } from '../message/message';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { from } from 'rxjs';\r\nimport { map } from 'rxjs/operators'\r\nimport axios from 'axios';\r\n\r\nexport interface DhammaState {\r\n  error: boolean,\r\n  dhamma?: Dhamma\r\n}\r\n\r\nexport interface DhammaProp {\r\n  id: number,\r\n  title: string\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n  createStyles({\r\n    dhamma: {\r\n      width: '100%',\r\n      marginBottom: '1rem',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginBottom: '2rem'\r\n      },\r\n    },\r\n    audios: {\r\n      width: '100%',\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    audio: {\r\n      marginRight: '1rem'\r\n    }\r\n  })\r\n);\r\n\r\nconst GET_ALL_DHAMMAS = \"https://www.mraukoomeditationcenter.org/all-dhammas.json\";\r\nconst S3_BASE_URL = 'https://mraukoomeditationcenter.s3-ap-southeast-1.amazonaws.com';\r\n\r\nconst DhammaItem: React.FC<DhammaProp> = ({ id, title }) => {\r\n\r\n  const classes = useStyles();\r\n  const [ state, setState ] = useState<DhammaState>();\r\n\r\n  useEffect(() => {\r\n    const subscription = from(axios.get(GET_ALL_DHAMMAS))\r\n      .pipe(\r\n        map(response => response),\r\n        map(response => response.data),\r\n      ).subscribe((dhammas: Dhamma[]) => {\r\n        if(dhammas && id < dhammas.length) {\r\n          setState({\r\n            error: false,\r\n            dhamma: dhammas[id]\r\n          });\r\n        }\r\n      }, (error) => {\r\n        setState({\r\n            error: true\r\n        });\r\n      });\r\n      return () => {\r\n        subscription.unsubscribe();\r\n      };\r\n  }, [id]); \r\n\r\n  if(!state) {\r\n    return (<Message type=\"Loading\" />)\r\n  }\r\n\r\n  const { error, dhamma } = state;\r\n\r\n  if(!dhamma) {\r\n    return (<Message type=\"Loading\" />)\r\n  }\r\n\r\n  if(error) {\r\n    return (<Message type=\"Error\" />)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.dhamma}>\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMore />}\r\n        >\r\n          <Typography>{title}</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <div className={classes.audios}>\r\n            {\r\n              dhamma.audios.map((audio, index) => (\r\n                <div key={index} className={classes.audio}>\r\n                  <p>{audio.title}</p>\r\n                  <audio controls>\r\n                    <source type=\"audio/mpeg\" src={S3_BASE_URL+audio.location} />\r\n                  </audio>\r\n                </div>\r\n              ))\r\n            }\r\n            </div>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DhammaItem;","import React, { useEffect, useState } from 'react';\r\nimport DhammaItem from '../dhamma/dhamma-item';\r\nimport { Dhamma } from '../dhamma/model';\r\nimport { Message } from '../message/message';\r\nimport { createStyles, Theme, Typography, IconButton } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { from } from 'rxjs';\r\nimport { map, last } from 'rxjs/operators'\r\nimport axios from 'axios';\r\nimport { More, MoreVert } from '@material-ui/icons';\r\n\r\n// export interface DhammaListState {\r\n//   error: boolean,\r\n//   dhammas: Dhamma[],\r\n//   lastIndex: number\r\n// }\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n  createStyles({\r\n    mainContent: {\r\n      minHeight: 'calc(100vh - 14rem)',\r\n      display: 'flex',\r\n      justifyContent: 'space-around',\r\n      flexWrap: 'wrap'\r\n    },\r\n    dhammaList: {\r\n      width: '100%',\r\n      display: 'flex',\r\n      flexWrap: 'wrap'\r\n    },\r\n    header: {\r\n      marginBottom: '2rem'\r\n    },\r\n    moreContainer: {\r\n      display: 'flex',\r\n      width: '100%',\r\n      justifyContent: 'center'\r\n    }\r\n  })\r\n);\r\n\r\nconst GET_ALL_DHAMMAS = \"https://www.mraukoomeditationcenter.org/all-dhammas.json\";\r\n\r\nconst DhammaList: React.FC = () => {\r\n\r\n  const classes = useStyles();\r\n  let [ loading, setLoading ] = useState<boolean>();\r\n  let [ lastIndex, setLastIndex ] = useState<number>();\r\n  let [ end, setEnd ] = useState<boolean>();\r\n  let [ dhammas, setDhammas ] = useState<Dhamma[]>();\r\n\r\n  const observable = from(\r\n    axios.get(GET_ALL_DHAMMAS))\r\n      .pipe(\r\n        map(response => response),\r\n        map(response => response.data),\r\n      );\r\n\r\n  const loadMore = () => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLastIndex(lastIndex ? lastIndex+5 : 10);   \r\n      setLoading(false);   \r\n    }, 3000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const subscription = observable.subscribe((dhammas: Dhamma[]) => {\r\n      if(lastIndex) {\r\n        setDhammas(dhammas.slice(0, lastIndex));\r\n        setEnd(dhammas.length <= lastIndex);\r\n      } else {\r\n        setDhammas(dhammas.slice(0, 5));\r\n      }\r\n    }, (error) => {\r\n      setDhammas([]); \r\n    });\r\n    return () => {\r\n      subscription.unsubscribe();\r\n    };\r\n  }, [lastIndex]);\r\n\r\n  if(!dhammas) {\r\n    return (<div className={classes.mainContent}><Message type=\"Loading\" /></div>)\r\n  }\r\n\r\n  if(dhammas.length === 0) {\r\n    return (<Message type=\"Error\" />)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <Typography variant=\"h6\" className={classes.header}>Dhamma</Typography> */}\r\n      <div className={classes.dhammaList}>\r\n        {\r\n          dhammas.map((dhamma, index) => (\r\n            <DhammaItem key={index} id={index} title={dhamma.title} />\r\n          ))\r\n        }\r\n      </div>\r\n      { !end && loading  && <Message type=\"Loading\" /> }\r\n      { !end && !loading && <div className={ classes.moreContainer }><IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={ loadMore }><MoreVert></MoreVert></IconButton></div> }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DhammaList;","import React from 'react';\r\nimport { makeStyles, Theme, createStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Home as HomeIcon, Menu, Headset, LocationOn, FavoriteBorderOutlined, Facebook } from '@material-ui/icons';\r\nimport { Link as HyperLink, Avatar, Hidden } from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\r\nimport Home from './home/home';\r\nimport Contact from './contact/contact';\r\nimport DhammaList from './dhamma-list/dhamma-list';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"rgba(106, 0, 0, 0.9)\"\r\n    },\r\n    text: {\r\n      secondary: \"#ffffff\"\r\n    }\r\n  }\r\n});\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n  createStyles({\r\n    list: {\r\n      width: 'auto',\r\n    },\r\n    fullList: {\r\n      width: 'auto',\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    menus: {\r\n      color: theme.palette.text.secondary\r\n    },\r\n    menuLinks: {\r\n      textDecoration: 'none',\r\n    },\r\n    title: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      flexGrow: 1,\r\n    },\r\n    footerText: {\r\n      display: 'flex',\r\n      flexGrow: 1\r\n    },\r\n    footerTextHeart: {\r\n      marginLeft: theme.spacing(0.5),\r\n      marginRight: theme.spacing(0.5)\r\n    },\r\n    mainContent: {\r\n      margin: '1rem',\r\n      [theme.breakpoints.up('sm')]: {\r\n          margin: '3rem',\r\n      },\r\n    },\r\n    logo: {\r\n      marginRight: '0.5rem'\r\n    },\r\n    drawerHeaderContainer: {\r\n      backgroundColor: '#6a0000',\r\n      minWidth: '12rem'\r\n    },\r\n    drawerHeaderLogo: {\r\n      width: '24px',\r\n      height: '24px'\r\n    }\r\n  })\r\n);\r\n\r\nconst App: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n  });\r\n\r\n  const openDrawer = () => (event: React.KeyboardEvent | React.MouseEvent) => {\r\n    setState({ ...state, open: true });\r\n  };\r\n\r\n  const closeDrawer = () => (event: React.KeyboardEvent | React.MouseEvent) => {\r\n    setState({ ...state, open: false });\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <ThemeProvider theme={theme}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={ openDrawer() }>\r\n              <Menu />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              <Avatar alt=\"Mrauk Oo Meditation Center\" src=\"/logo192-white.png\" className={classes.logo} />\r\n              <Hidden smDown><HyperLink underline=\"none\" component={Link} to={'/'} color=\"inherit\">Mrauk Oo Meditation Center</HyperLink></Hidden>\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              {/* <Button component={Link} to={'/'} color=\"inherit\" startIcon={<HomeIcon />}>Home</Button> */}\r\n              <Button component={Link} to={'/dhamma'} color=\"inherit\" startIcon={<Headset />}>Dhamma</Button>\r\n              {/* <Button component={Link} to={'/contact'} color=\"inherit\" startIcon={<LocationOn />}>Contact</Button> */}\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        \r\n        <section className={classes.mainContent}>\r\n          <Route path=\"/\" component={Contact} exact />\r\n          <Route path=\"/dhamma\" component={DhammaList} />\r\n          <Route path=\"/contact\" component={Contact} />\r\n        </section>\r\n\r\n        <SwipeableDrawer\r\n          anchor=\"left\"\r\n          open={state.open}\r\n          onClose={closeDrawer()}\r\n          onOpen={openDrawer()}\r\n        >\r\n          <div\r\n            className={classes.list}\r\n            onClick={closeDrawer()}\r\n            onKeyDown={closeDrawer()}\r\n          >\r\n            <List className={classes.drawerHeaderContainer}>\r\n                <ListItem button key=\"home\" component={Link} to={'/'}>\r\n                  <ListItemIcon><Avatar alt=\"Mrauk Oo Meditation Center\" src=\"/logo192-white.png\" className={classes.drawerHeaderLogo} /></ListItemIcon>\r\n                  <Typography variant=\"h6\"><HyperLink underline=\"none\" component={Link} to={'/'} color=\"textSecondary\">Mrauk Oo Meditation Center</HyperLink></Typography>\r\n                </ListItem>\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                <ListItem button key=\"dhamma\" component={Link} to={'/dhamma'}>\r\n                  <ListItemIcon><Headset /></ListItemIcon>\r\n                  <ListItemText primary=\"Dhamma\" />\r\n                </ListItem>\r\n            </List>\r\n            {/* <Divider />\r\n            <List>\r\n              <ListItem button key=\"contact\" component={Link} to={'/contact'}>\r\n                  <ListItemIcon><LocationOn /></ListItemIcon>\r\n                  <ListItemText primary=\"Contact\" />\r\n                </ListItem>\r\n            </List> */}\r\n            <Divider />\r\n          </div>\r\n        </SwipeableDrawer>\r\n\r\n        <AppBar position=\"static\">\r\n          <Toolbar >\r\n            <div className={classes.footerText}>\r\n              <div>Made in NYC</div> \r\n            </div>\r\n            <div>\r\n              <HyperLink target=\"_blank\" rel=\"noopener\" href=\"https://www.facebook.com/mraukoosayataw\" color=\"inherit\"><Facebook fontSize=\"large\" /></HyperLink>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </ThemeProvider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}